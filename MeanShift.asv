function [ M ] = MeanShift( I, Rdata, distT, bandwidth, maxIt, thresholdCluster )
% Rdata contains the weighted colors of each pixel candidate
% M contains the pixels that belong to the higher mode
% sigma is the std of the color set
A = I(Rdata(:,3), Rdata(:,4), :);
[sx, sy] = size(A);
B = distT(Rdata(:,1), Rdata(:,2));
A = reshape(A,[], 3);
A = A(1:sx+1:sx*sy,:);
B = reshape(B,[], 3);
B = B(1:sx+1:sx*sy,:);
C = repmat(Rdata(:,5), [1 3]); % similitude 

RGB = C .* 1.3.^(-B) .* A; % I(i2, j2, :)
[m,n,rgb] = size(RGB);
    
for iter = 1:maxIt
    for p = 1:m-1
        pixelP = RGB(p, :);
        neighborhood = [];
        for q = p+1:m
           % create neighborhood
           pixelQ = RGB(q,:);
           d = sum((pixelP - pixelQ).^2);
           if d < thresholdCluster
               neighborhood(end+1) = pixelQ; % neighborhood(end+1, 3) ?
           end
        end
        num = 0;
        den = 0;
        for k = 1:length(neighborhood)
            dist = sum((neighborhood(k)- pixelP).^2);
            weight = (1/bandwidth*sqrt(2*pi))* e^(-0.5*(dist/bandwidth)^2);
            num = num + weight*neighborhood(k);
            den = den + weight;
        end
        mean_shift = num/den;
        RGB(p,:) = mean_shift;        
    end
end
M = RGB;
end

